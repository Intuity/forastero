name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment to GitHub pages, but don't cancel running
# builds and wait for completion
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # lint:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 15
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python 3.11
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: 3.11
  #   - name: Install Poetry
  #     run: |
  #       python -m pip install --upgrade pip
  #       python -m pip install poetry poethepoet
  #   - name: Setup environment
  #     run: |
  #       poetry install --with dev
  #   - name: Run lint
  #     run: |
  #       poe lint

  build_docs:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: 3.11
    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry poethepoet
    - name: Setup environment
      run: |
        poetry install --with dev
    - name: Build documentation
      run: |
        poetry run mkdocs build
    - name: Upload documentation artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: ./site

  deploy_docs:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build_docs
    steps:
      - name: Deploy to GitHub pages
        id: deployment
        uses: actions/deploy-pages@v2

  # unit_tests:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 15
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: ["3.8", "3.9", "3.10", "3.11"]

  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: Install Poetry
  #     run: |
  #       python -m pip install --upgrade pip
  #       python -m pip install poetry poethepoet
  #   - name: Setup environment
  #     run: |
  #       poetry install --with dev
  #   - name: Run tests
  #     timeout-minutes: 5
  #     run: |
  #       poe test
  #   - name: Archive code coverage results
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: pytest-cov
  #       path: htmlcov
